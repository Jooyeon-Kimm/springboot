*******************************************************************************
1. 환경 세팅
*******************************************************************************
1-1. Oracle JDK 설치 (java version "19.0.1" 2022-10-18)
1-2. MySQL 5.7 설치  (MySQL5.7.41)
1-3. 쿠키런 폰트 설치
1-4. STS 툴 설치


1-5. 인텔리 J - 키맵 세팅
Eclipse Marketplace - IntelliJ IDEA keymap for Eclipse 0.1
1-6. UTF-8 세팅
1-7. 폰트 세팅

*******************************************************************************
2. 의존성 설정
*******************************************************************************
2-1. Spring Boot DevTools
2-2. Lombok
2-3. Spring Data JPA
2-4. MySQL Driver
2-5. Spring Security
 

2-6. OAuth2 Client - 세팅안함.
직접 카카오 로그인 구현하여 개념잡기
JWT는 APP과 연동할 때 사용할 예정

2-7. 템플릿 엔진
jsp 사용할 예정

2-8. Spring Web
WEB MVC를 사용하여 웹 애플리케이션을 만드는데 필요한 스프링부트의 기본적인 요소를 가짐.
내장형 컨테이너로 톰캣을 기본탑재하고 있다.

2-10. 추가적
<!-- 시큐리티 태그 라이브러리 -->
<dependency>
  <groupId>org.springframework.security</groupId>
  <artifactId>spring-security-taglibs</artifactId>
</dependency>

<!-- JSP 템플릿 엔진 -->
<dependency>
  <groupId>org.apache.tomcat.embed</groupId>
  <artifactId>tomcat-embed-jasper</artifactId>
</dependency>

<!-- JSTL -->
<dependency>
  <groupId>javax.servlet</groupId>
  <artifactId>jstl</artifactId>
</dependency>

*******************************************************************************
3. MySQL 한글 설정 및 연결
*******************************************************************************
3-1. MySQL 한글 설정
my.ini 파일
MySQL 재시작

[client]
default-character-set=utf8

[mysql]
default-character-set=utf8

[mysqld]
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
init_connect='SET collation_connection = utf8_general_ci'
character-set-server=utf8

3-2.한글 설정 확인
show variables like 'c%';
show variables like 'c%';

3-3. 사용자 생성 및 권한 주기 및 DB 생성
-- 유저이름@아이피주소
create user 'joo'@'%' identified by 'joo1234';
-- ON DB이름.테이블명
-- TO 유저이름@아이피주소
GRANT ALL PRIVILEGES ON *.* TO 'joo'@'%';
CREATE DATABASE blog CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
use blog;

3-4. MySQL 프로젝트 연결
src/main/resources/application.yml

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog?serverTimezone=Asia/Seoul
    username: joo
    password: joo1234
*******************************************************************************
4. Git 세팅
*******************************************************************************
4-1. github 로그인
4-2. git 설치

4-3. 내 프로젝트 git 연동
git init
git add .
git commit -m "환경세팅완료 v1"
git remote add origin 주소
git push origin master


*******************************************************************************
5. HTTP1.1 체험하기
*******************************************************************************
5-1. POSTMAN 설치
5-2. HTTP1.1 의 통신 방법 4가지 (요청의 방법)
get : 데이터를 줘! - 데이터베이스에서 SELECT
post : 데이터를 추가해줘 - INSERT
put : 데이터를 수정해줘 - UPDATE
delete : 데이터를 삭제해줘 - DELETE

어떤 데이터를? (what)


5-3. stateless 와 stateful
-- stateful
ex) 채팅
클라이언트가 서버에게 요청을 하고
서버가 클라이언트에게 응답을 할 때
지속적인 요청과 응답이 일어날 수 있도록
클라이언트 포트와 서버 포트가 연결되어 있다.

세션이 만들어졌다
= 데이터를 응답해줄 준비가 되었다.
근거: 인증이 되어 있다.
한 번 인증된 포트는 계속 통신을 하면서
데이터를 막 주고받을 수 있다. (세션 유지)

-- stateless
ex) http
요청과 응답을 하지 않을 때는
연결이 끊어져있다.

한 번 인증을 했어도
세션이 유지되지 않는다.

http: 문서전달을 목적으로 만들어졌지만
요즘은 홈페이지 만들기, 회원가입 하기, 데이터 주고 받기, 동영상 등등
많은 것들을 한다.


5-4. MIME 타입
클라이언트가 서버에게 POST 요청을 한다. (데이터를 추가해달라)
헤더: 데이터를 설명해주는 내용
바디: 데이터

http 통신 방식 2가지:
패킷 스위칭 방식:
데이터를 패킷으로 나누어서 순서대로 전달


서킷 스위칭 방식: 
A와 B가 데이터를 교환할 때
데이터를 한 큐에 실어서 전달

장점:
속력이 빠르다.

단점: 
물리적으로 선이 계속 추가가 되어야하니까 비용이 많이 든다



5-5. Controller 생성 및 실습
HttpControllerTest.java 생성
Get 메서드
Post 메서드
Put 메서드
Delete 메서드

*******************************************************************************
6. 
*******************************************************************************
